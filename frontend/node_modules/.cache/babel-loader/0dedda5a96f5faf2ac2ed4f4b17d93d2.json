{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/ScheduleInterview.jsx\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nclass ScheduleInterview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectPosition = e => {\n      this.setState({\n        jobposition: e.value\n      });\n    };\n\n    this.state = {\n      name: localStorage.getItem(\"name\"),\n      email: localStorage.getItem(\"email\"),\n      company: localStorage.getItem(\"company\"),\n      candidatename: \"\",\n      candidateemail: \"\",\n      positions: [],\n      jobposition: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.selectPosition = this.selectPosition.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    //console.log(\"component did mount\");\n    let email = this.state.email; //console.log(\"email is..\", email);\n\n    let data = {\n      email: email\n    };\n    let url = \"http://localhost:3001/api/feedback/getPositionDetails\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          positions: this.state.positions.concat(response.data)\n        });\n      })\n      .catch(err => console.log(err));*/\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); //console.log(\"inside handlesubmit\");\n\n    var url = \"http://localhost:3001/api/feedback/scheduleInterview\";\n\n    if (this.state.candidateemail == \"\" || this.state.candidatename == \"\") {\n      swal(\"All Details required!\", \"\", \"warning\");\n    } else {\n      var self = this;\n      var data = {\n        position: this.state.jobposition,\n        email: this.state.candidateemail,\n        name: this.state.candidatename,\n        adminemail: this.state.email\n      }; //console.log(\"after set state\");\n\n      console.log(data);\n      axios.post(url, data).then(response => {\n        //console.log(\"response is..........\", response.data);\n        swal(\"Interview Scheduled!\", \"\", \"success\");\n      }).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    let positiond = [];\n    let response = {\n      positions: [{\n        pname: \"Hiring manager\",\n        desc: \"Hii i am a manager\",\n        skills: [\"c\", \"c++\"],\n        jobid: \"123\"\n      }, {\n        pname: \"Hiring manager1\",\n        desc: \"Hii i am a new manager\",\n        skills: [\"c\", \"c++\", \"python\"],\n        jobid: \"1234\"\n      }]\n    };\n    let details_positions = response.positions.map(positions => {\n      //console.log(\"new position is \", positions.pname);\n      positiond.push(positions.pname);\n    }); //console.log(\"positiond is \", positiond);\n\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n              redirectVar = <Redirect to=\"/\" />;\n                 \n            }*/\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeAdmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \" Home \")), React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./scheduleInterview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" Schedule Interview \")), React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./assignInterview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \" Assign Interview \")))), React.createElement(\"td\", {\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-55  p-3 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      options: positiond,\n      onChange: this.selectPosition,\n      value: this.state.jobposition,\n      placeholder: \"Job Positions : \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"candidateemail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Candidate's Email\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"candidateemail\",\n      onChange: this.handleChange,\n      defaultValue: this.state.candidateemail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"candidatename\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Candidate's Name\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"candidatename\",\n      onChange: this.handleChange,\n      defaultValue: this.state.candidatename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"./homeAdmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"light\",\n      style: btn,\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(\"td\", {\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default ScheduleInterview;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/ScheduleInterview.jsx"],"names":["React","Component","ListGroup","Table","NavBar","Form","Button","Route","axios","Redirect","swal","Row","Col","Dropdown","ScheduleInterview","constructor","props","selectPosition","e","setState","jobposition","value","state","name","localStorage","getItem","email","company","candidatename","candidateemail","positions","handleChange","bind","handleSubmit","target","componentDidMount","data","url","event","preventDefault","self","position","adminemail","console","log","post","then","response","catch","err","render","positiond","pname","desc","skills","jobid","details_positions","map","push","redirectVar","group","para","btn","width","height","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign","color","fontFamily","fontStyle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,0BAAP;;AAEA,MAAMC,iBAAN,SAAgCb,SAAhC,CAA0C;AACxCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,cApBmB,GAoBFC,CAAC,IAAI;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF,CAAC,CAACG;AADH,OAAd;AAGD,KAxBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,CADK;AAEXC,MAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFI;AAGXE,MAAAA,OAAO,EAAEH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAHE;AAIXG,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,cAAc,EAAE,EALL;AAMXC,MAAAA,SAAS,EAAE,EANA;AAOXV,MAAAA,WAAW,EAAE;AAPF,KAAb;AASA,SAAKW,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKf,cAAL,GAAsB,KAAKA,cAAL,CAAoBe,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AACDD,EAAAA,YAAY,CAACb,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AACZ,OAACD,CAAC,CAACgB,MAAF,CAASX,IAAV,GAAiBL,CAAC,CAACgB,MAAF,CAASb;AADd,KAAd;AAGD;;AAMDc,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIT,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAvB,CAFkB,CAGlB;;AACA,QAAIU,IAAI,GAAG;AACTV,MAAAA,KAAK,EAAEA;AADE,KAAX;AAGA,QAAIW,GAAG,GAAG,uDAAV;AACA;;;;;;;;;AASD;;AACDJ,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN,GADkB,CAElB;;AACA,QAAIF,GAAG,GAAG,sDAAV;;AAEA,QAAI,KAAKf,KAAL,CAAWO,cAAX,IAA6B,EAA7B,IAAmC,KAAKP,KAAL,CAAWM,aAAX,IAA4B,EAAnE,EAAuE;AACrElB,MAAAA,IAAI,CAAC,uBAAD,EAA0B,EAA1B,EAA8B,SAA9B,CAAJ;AACD,KAFD,MAEO;AACL,UAAI8B,IAAI,GAAG,IAAX;AACA,UAAIJ,IAAI,GAAG;AACTK,QAAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWF,WADZ;AAETM,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWO,cAFT;AAGTN,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWM,aAHR;AAITc,QAAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWI;AAJd,OAAX,CAFK,CAQL;;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA5B,MAAAA,KAAK,CACFqC,IADH,CACQR,GADR,EACaD,IADb,EAEGU,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACArC,QAAAA,IAAI,CAAC,sBAAD,EAAyB,EAAzB,EAA6B,SAA7B,CAAJ;AACD,OALH,EAMGsC,KANH,CAMSC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CANhB;AAOD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIJ,QAAQ,GAAG;AACbjB,MAAAA,SAAS,EAAE,CACT;AACEsB,QAAAA,KAAK,EAAE,gBADT;AAEEC,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,KAAN,CAHV;AAIEC,QAAAA,KAAK,EAAE;AAJT,OADS,EAOT;AACEH,QAAAA,KAAK,EAAE,iBADT;AAEEC,QAAAA,IAAI,EAAE,wBAFR;AAGEC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,KAAN,EAAa,QAAb,CAHV;AAIEC,QAAAA,KAAK,EAAE;AAJT,OAPS;AADE,KAAf;AAgBA,QAAIC,iBAAiB,GAAGT,QAAQ,CAACjB,SAAT,CAAmB2B,GAAnB,CAAuB3B,SAAS,IAAI;AAC1D;AACAqB,MAAAA,SAAS,CAACO,IAAV,CAAe5B,SAAS,CAACsB,KAAzB;AACD,KAHuB,CAAxB,CAlBO,CAsBP;;AACA,QAAIO,WAAW,GAAG,IAAlB;AACA;;;;;AAOA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WADH,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAA2B,MAAA,KAAK,EAAEC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,IAAI,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAEC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,IAAI,EAAC,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAJF,EAOE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,MAAM,MAAtB;AAAuB,MAAA,IAAI,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAPF,CADF,CADF,EAcE;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEV,SADX;AAEE,MAAA,QAAQ,EAAE,KAAKlC,cAFjB;AAGE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,WAHpB;AAIE,MAAA,WAAW,EAAC,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAET,GAAhB;AAAqB,MAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,QAAQ,EAAE,KAAKoB,YAHjB;AAIE,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWO,cAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CARF,EAqBE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAElB,GAAhB;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,QAAQ,EAAE,KAAKoB,YAHjB;AAIE,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWM,aAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CArBF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAoCE;AAAG,MAAA,IAAI,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,KAAK,EAAEkC,GAFT;AAGE,MAAA,OAAO,EAAE,KAAK7B,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CApCF,CADF,CADF,CAdF,EAgEE;AAAI,MAAA,KAAK,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhEF,CADF,CAPF,CADF;AA8ED;;AAnLuC;;AAqL1C,MAAM2B,KAAK,GAAG;AACZG,EAAAA,KAAK,EAAE,GADK;AAEZC,EAAAA,MAAM,EAAE;AAFI,CAAd;AAIA,MAAMH,IAAI,GAAG;AACXI,EAAAA,UAAU,EAAE,8BADD;AAEXC,EAAAA,QAAQ,EAAE,EAFC;AAGXC,EAAAA,SAAS,EAAE,QAHA;AAIXC,EAAAA,OAAO,EAAE,EAJE;AAKXC,EAAAA,MAAM,EAAE,EALG;AAMXC,EAAAA,OAAO,EAAE,cANE;AAOXC,EAAAA,cAAc,EAAE;AAPL,CAAb;AASA,MAAMT,GAAG,GAAG;AACVU,EAAAA,KAAK,EAAE,SADG;AAEVC,EAAAA,UAAU,EAAE,8BAFF;AAGVC,EAAAA,SAAS,EAAE;AAHD,CAAZ;AAKA,eAAe5D,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nclass ScheduleInterview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem(\"name\"),\n      email: localStorage.getItem(\"email\"),\n      company: localStorage.getItem(\"company\"),\n      candidatename: \"\",\n      candidateemail: \"\",\n      positions: [],\n      jobposition: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.selectPosition = this.selectPosition.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  selectPosition = e => {\n    this.setState({\n      jobposition: e.value\n    });\n  };\n  componentDidMount() {\n    //console.log(\"component did mount\");\n    let email = this.state.email;\n    //console.log(\"email is..\", email);\n    let data = {\n      email: email\n    };\n    let url = \"http://localhost:3001/api/feedback/getPositionDetails\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          positions: this.state.positions.concat(response.data)\n        });\n      })\n      .catch(err => console.log(err));*/\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    //console.log(\"inside handlesubmit\");\n    var url = \"http://localhost:3001/api/feedback/scheduleInterview\";\n\n    if (this.state.candidateemail == \"\" || this.state.candidatename == \"\") {\n      swal(\"All Details required!\", \"\", \"warning\");\n    } else {\n      var self = this;\n      var data = {\n        position: this.state.jobposition,\n        email: this.state.candidateemail,\n        name: this.state.candidatename,\n        adminemail: this.state.email\n      };\n      //console.log(\"after set state\");\n      console.log(data);\n      axios\n        .post(url, data)\n        .then(response => {\n          //console.log(\"response is..........\", response.data);\n          swal(\"Interview Scheduled!\", \"\", \"success\");\n        })\n        .catch(err => console.log(err));\n    }\n  }\n  render() {\n    let positiond = [];\n    let response = {\n      positions: [\n        {\n          pname: \"Hiring manager\",\n          desc: \"Hii i am a manager\",\n          skills: [\"c\", \"c++\"],\n          jobid: \"123\"\n        },\n        {\n          pname: \"Hiring manager1\",\n          desc: \"Hii i am a new manager\",\n          skills: [\"c\", \"c++\", \"python\"],\n          jobid: \"1234\"\n        }\n      ]\n    };\n    let details_positions = response.positions.map(positions => {\n      //console.log(\"new position is \", positions.pname);\n      positiond.push(positions.pname);\n    });\n    //console.log(\"positiond is \", positiond);\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n              redirectVar = <Redirect to=\"/\" />;\n\n\n\n              \n            }*/\n    return (\n      <div>\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeAdmin\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"./scheduleInterview\">\n                  <p style={para}> Schedule Interview </p>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"./assignInterview\">\n                  <p style={para}> Assign Interview </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td width=\"700\">\n              <div className=\"w-55  p-3 mt-2\">\n                <Form>\n                  <Dropdown\n                    options={positiond}\n                    onChange={this.selectPosition}\n                    value={this.state.jobposition}\n                    placeholder=\"Job Positions : \"\n                  />\n                  <br />\n                  <Form.Group as={Row} controlId=\"candidateemail\">\n                    <Form.Label column sm=\"2\">\n                      Candidate's Email\n                    </Form.Label>\n                    <Col sm=\"10\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"candidateemail\"\n                        onChange={this.handleChange}\n                        defaultValue={this.state.candidateemail}\n                      />\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"candidatename\">\n                    <Form.Label column sm=\"2\">\n                      Candidate's Name\n                    </Form.Label>\n                    <Col sm=\"10\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"candidatename\"\n                        onChange={this.handleChange}\n                        defaultValue={this.state.candidatename}\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  <br></br>\n                  <a href=\"./homeAdmin\">\n                    <Button\n                      variant=\"light\"\n                      style={btn}\n                      onClick={this.handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                  </a>\n                </Form>\n              </div>\n            </td>\n            <td width={300}></td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default ScheduleInterview;\n"]},"metadata":{},"sourceType":"module"}