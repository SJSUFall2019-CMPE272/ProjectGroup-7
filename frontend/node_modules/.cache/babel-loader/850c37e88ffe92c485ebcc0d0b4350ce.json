{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport FontAwesome from 'react-fontawesome';\nimport { MDBContainer, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport GoogleLogin from 'react-google-login';\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      collapse: false,\n      isSignedIn: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true\n    });\n  }\n\n  handleClickOutside() {\n    this.setState({\n      listOpen: false\n    });\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  login(response) {\n    console.log(\"Google Response: \" + JSON.stringify(response));\n  }\n\n  render() {\n    const list = this.props.list;\n    const _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n\n    const responseGoogle = response => {\n      if (!response.error) this.login(response); //call Login API with{\n      //\"name\":\"response.name\",\n      //\"email\":\"response.email\"\n      //\"company\":\"\",\n      //\"usertype\":\"\"}\n    };\n\n    const bgPink = {\n      backgroundColor: \"#e91e63\"\n    };\n    const container = {\n      height: 1300\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MDBNavbar, {\n      style: bgPink,\n      dark: true,\n      expand: \"md\",\n      scrolling: true,\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(MDBNavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Feed-Me-Back\")), React.createElement(MDBNavbarToggler, {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(MDBCollapse, {\n      isOpen: this.state.collapse,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(MDBNavbarNav, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(MDBNavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Features\")), React.createElement(MDBNavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"./integration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Integration\")), React.createElement(MDBNavItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Login\"))))))), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"./login1.jpg\"),\n      width: 1000,\n      class: \"rounded\",\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Dropdown, {\n      title: \"Select location\",\n      list: this.state.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-header\",\n      onClick: () => this.toggleList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, headerTitle), listOpen ? React.createElement(FontAwesome, {\n      name: \"angle-up\",\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }) : React.createElement(FontAwesome, {\n      name: \"angle-down\",\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), listOpen && React.createElement(\"ul\", {\n      className: \"dd-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, list.map(item => React.createElement(\"li\", {\n      className: \"dd-list-item\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, item.title)))), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"LOGIN WITH GOOGLE\"), React.createElement(GoogleLogin, {\n      clientId: \"873380339585-lp7se9eau76buen9oa0787e285tpr42k.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\n      ,\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst para = {\n  fontfamily: \"'Helvetica Neue', Helvetica, Arial, sans-serif\"\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default Login;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/Login.jsx"],"names":["React","Component","FontAwesome","MDBContainer","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBIcon","BrowserRouter","Router","Form","Button","GoogleLogin","Login","constructor","props","state","listOpen","headerTitle","title","collapse","isSignedIn","onClick","bind","setState","onSuccess","handleClickOutside","toggleList","prevState","login","response","console","log","JSON","stringify","render","list","responseGoogle","error","bgPink","backgroundColor","container","height","require","location","map","item","id","para","fontfamily","btn","color","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FontAwesome from 'react-fontawesome'\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n  MDBNavLink,\n  MDBIcon\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport GoogleLogin from 'react-google-login';\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n    headerTitle: this.props.title,\n      collapse: false,\n      isSignedIn: false\n\n    };\n    this.onClick = this.onClick.bind(this);\n\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n\n  onSuccess() {\n  this.setState({\n    isSignedIn: true\n    })\n  }\n\n  handleClickOutside(){\n  this.setState({\n    listOpen: false\n    })\n  }\n\n  toggleList(){\n  this.setState(prevState => ({\n    listOpen: !prevState.listOpen\n   }))\n  }\n\n  login(response) {\n    console.log(\"Google Response: \"+JSON.stringify(response));\n  }\n  render() {\n    const{list} = this.props\n    const{listOpen, headerTitle} = this.state\n    const responseGoogle = (response) => {\n      if(!response.error)\n        this.login(response)\n      //call Login API with{\n        //\"name\":\"response.name\",\n        //\"email\":\"response.email\"\n        //\"company\":\"\",\n        //\"usertype\":\"\"}\n\n    }\n    const bgPink = { backgroundColor: \"#e91e63\" };\n    const container = { height: 1300 };\n    return (\n      <div>\n        <Router>\n          <header>\n            <MDBNavbar style={bgPink} dark expand=\"md\" scrolling fixed=\"top\">\n              <MDBNavbarBrand href=\"/\">\n                <strong>Feed-Me-Back</strong>\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.onClick} />\n              <MDBCollapse isOpen={this.state.collapse} navbar>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/\">Features</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"./integration\">Integration</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem active>\n                    <MDBNavLink to=\"/login\">Login</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBNavbar>\n          </header>\n        </Router>\n\n        <table>\n          <tr>\n            <td>\n              <img\n                src={require(\"./login1.jpg\")}\n                width={1000}\n                class=\"rounded\"\n                alt=\"avatar\"\n              />\n            </td>\n            <Dropdown\n              title=\"Select location\"\n              list={this.state.location}\n            />\n            <td>\n              <div className=\"dd-wrapper\">\n                <div className=\"dd-header\" onClick={() => this.toggleList()}>\n                  <div className=\"dd-header-title\">{headerTitle}</div>\n                    {listOpen\n                      ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n                      : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n                    }\n                  </div>\n                  {listOpen && <ul className=\"dd-list\">\n                    {list.map((item) => (\n                      <li className=\"dd-list-item\" key={item.id} >{item.title}</li>\n                      ))}\n                  </ul>}\n              </div>\n              <div className=\"App\">\n                <h1>LOGIN WITH GOOGLE</h1>\n                <GoogleLogin\n                  clientId=\"873380339585-lp7se9eau76buen9oa0787e285tpr42k.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\n                  buttonText=\"LOGIN WITH GOOGLE\"\n                  onSuccess={responseGoogle}\n                  onFailure={responseGoogle}\n                />\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\nconst para = {\n  fontfamily: \"'Helvetica Neue', Helvetica, Arial, sans-serif\"\n};\nconst btn = {\n  color: \"#bd0d39\",\n\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}