{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/HomeInterviewer.jsx\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nclass HomeInterviewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem(\"name\"),\n      email: localStorage.getItem(\"email\"),\n      company: localStorage.getItem(\"company\"),\n      candidates: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount\");\n    let email = this.state.email;\n    console.log(\"email is..\", email);\n    let data = {\n      email: email\n    };\n    let url = \"http://localhost:3001/api/feedback/getInterviewerDetails\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          candidates: this.state.candidates.concat(response.data)\n        });\n      })\n      .catch(err => console.log(err));*/\n  }\n\n  showButton(status, email) {\n    if (status == \"completed\") {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"900\",\n        style: item1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/getquestions\",\n          state: {\n            result: this.candidates\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"light\",\n        style: btn,\n        id: email //onClick={this.handleUpdate}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Fill Review Form\"))));\n    }\n  }\n\n  render() {\n    let status = \"\";\n    let response = {\n      candidates: [{\n        email: \"shraddha@gmail.com\",\n        name: \"Shraddha\",\n        status: \"completed\",\n        jobid: \"123\"\n      }, {\n        email: \"kanika@gmail.com\",\n        name: \"Kanika\",\n        status: \"scheduled\",\n        jobid: \"1234\"\n      }]\n    };\n    let details_candidates = response.candidates.map(candidates => {\n      return React.createElement(Table, {\n        bordered: true,\n        width: \"900\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"80%\",\n        class: \"font-weight-bold\",\n        style: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Candidate Name: \", candidates.name)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"900\",\n        style: item1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Job ID: \", candidates.jobid)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"900\",\n        class: \"font-weight-bold\",\n        style: item1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Candidate Interview Status: \", candidates.status)), this.showButton(candidates));\n    });\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n          redirectVar = <Redirect to=\"/\" />;\n        }*/\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeInterviewer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" Home \")))), React.createElement(\"td\", {\n      style: para,\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, details_candidates))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst item = {\n  textAlign: \"left\",\n  fontSize: 25,\n  fontfamily: \"Arial, Helvetica, sans-serif\"\n};\nconst item1 = {\n  textAlign: \"left\",\n  fontSize: 18,\n  fontfamily: \"Arial, Helvetica, sans-serif\"\n};\nexport default HomeInterviewer;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/HomeInterviewer.jsx"],"names":["React","Component","ListGroup","Table","NavBar","Button","Route","axios","Redirect","Link","HomeInterviewer","constructor","props","state","name","localStorage","getItem","email","company","candidates","componentDidMount","console","log","data","url","showButton","status","item1","pathname","result","btn","render","response","jobid","details_candidates","map","item","redirectVar","group","para","width","height","color","fontFamily","fontStyle","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nclass HomeInterviewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem(\"name\"),\n      email: localStorage.getItem(\"email\"),\n      company: localStorage.getItem(\"company\"),\n      candidates: []\n    };\n  }\n  componentDidMount() {\n    console.log(\"component did mount\");\n    let email = this.state.email;\n    console.log(\"email is..\", email);\n    let data = {\n      email: email\n    };\n    let url = \"http://localhost:3001/api/feedback/getInterviewerDetails\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          candidates: this.state.candidates.concat(response.data)\n        });\n      })\n      .catch(err => console.log(err));*/\n  }\n\n  showButton(status,email) {\n    if(status == \"completed\"){\n      return (\n        <tr>\n          <td width=\"900\" style={item1}>\n            <Link\n              to={{\n                pathname: \"/getquestions\",\n                state: { result: this.candidates }\n              }}\n            >\n            <Button\n              variant=\"light\"\n              style={btn}\n              id={email}\n              //onClick={this.handleUpdate}\n              >\n              Fill Review Form\n            </Button>\n            </Link>\n          </td>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    let status = \"\";\n    let response = {\n      candidates: [\n        {\n          email: \"shraddha@gmail.com\",\n          name: \"Shraddha\",\n          status: \"completed\",\n          jobid: \"123\"\n        },\n        {\n          email: \"kanika@gmail.com\",\n          name: \"Kanika\",\n          status: \"scheduled\",\n          jobid: \"1234\"\n        }\n      ]\n    };\n    let details_candidates = response.candidates.map(candidates => {\n\n      return (\n        <Table bordered width=\"900\">\n          <tr>\n            <td width=\"80%\" class=\"font-weight-bold\" style={item}>\n              Candidate Name: {candidates.name}\n            </td>\n          </tr>\n          <tr>\n            <td width=\"900\" style={item1}>\n              Job ID: {candidates.jobid}\n            </td>\n          </tr>\n          <tr>\n            <td width=\"900\" class=\"font-weight-bold\" style={item1}>\n              Candidate Interview Status: {candidates.status}\n            </td>\n          </tr>\n          \n            {this.showButton(candidates)}\n          \n        </Table>\n      )}\n    );\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n          redirectVar = <Redirect to=\"/\" />;\n        }*/\n    return (\n      <div>\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeInterviewer\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td style={para} width=\"700\">\n              {details_candidates}\n            </td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst btn = {\n  color: \"#bd0d39\",\n\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n\n  fontSize: 30,\n  textAlign: \"center\",\n\n  padding: 10,\n\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst item = {\n  textAlign: \"left\",\n  fontSize: 25,\n  fontfamily: \"Arial, Helvetica, sans-serif\"\n};\nconst item1 = {\n  textAlign: \"left\",\n  fontSize: 18,\n  fontfamily: \"Arial, Helvetica, sans-serif\"\n};\nexport default HomeInterviewer;\n"]},"metadata":{},"sourceType":"module"}