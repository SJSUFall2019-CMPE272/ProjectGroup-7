{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/AssignInterview.jsx\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass AssignInterview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem(\"name\"),\n      email: localStorage.getItem(\"email\"),\n      company: localStorage.getItem(\"company\"),\n      candidatesemail: \"\",\n      intervieweremail: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"inside handlesubmit\");\n    var url = \"http://localhost:3001/api/feedback/assignInterviewer\";\n\n    if (this.state.candidatesemail == \"\" || this.state.intervieweremail == \"\") {\n      swal(\"All Details required!\", \"\", \"warning\");\n    } else {\n      var self = this;\n      var data = {\n        intervieweremail: this.state.intervieweremail,\n        email: this.state.candidatesemail,\n        adminemail: this.state.email\n      }; //console.log(\"after set state\");\n      //console.log(data);\n\n      axios.post(url, data).then(response => {\n        //console.log(\"response is..........\", response.data);\n        swal(\"nterview Assigned!\", \"\", \"success\");\n      }).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n              redirectVar = <Redirect to=\"/\" />;\n            }*/\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeAdmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Home \")), React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./scheduleInterview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Schedule Interview \")), React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./assignInterview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Assign Interview \")))), React.createElement(\"td\", {\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-55  p-3 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"intervieweremail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Interviewer's Email\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"intervieweremail\",\n      onChange: this.handleChange,\n      defaultValue: this.state.intervieweremail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"candidatesemail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Candidate's Email\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"candidatesemail\",\n      onChange: this.handleChange,\n      defaultValue: this.state.candidatesemail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"./homeAdmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"light\",\n      style: btn,\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(\"td\", {\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default AssignInterview;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/AssignInterview.jsx"],"names":["React","Component","ListGroup","Table","NavBar","Form","Button","Route","axios","Redirect","swal","Row","Col","AssignInterview","constructor","props","state","name","localStorage","getItem","email","company","candidatesemail","intervieweremail","handleChange","bind","handleSubmit","e","setState","target","value","event","preventDefault","console","log","url","self","data","adminemail","post","then","response","catch","err","render","redirectVar","group","para","btn","width","height","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign","color","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass AssignInterview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem(\"name\"),\n      email: localStorage.getItem(\"email\"),\n      company: localStorage.getItem(\"company\"),\n      candidatesemail: \"\",\n      intervieweremail: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"inside handlesubmit\");\n    var url = \"http://localhost:3001/api/feedback/assignInterviewer\";\n\n    if (this.state.candidatesemail == \"\" || this.state.intervieweremail == \"\") {\n      swal(\"All Details required!\", \"\", \"warning\");\n    } else {\n      var self = this;\n      var data = {\n        intervieweremail: this.state.intervieweremail,\n        email: this.state.candidatesemail,\n        adminemail: this.state.email\n      };\n      //console.log(\"after set state\");\n      //console.log(data);\n      axios\n        .post(url, data)\n        .then(response => {\n          //console.log(\"response is..........\", response.data);\n          swal(\"nterview Assigned!\", \"\", \"success\");\n        })\n        .catch(err => console.log(err));\n    }\n  }\n  render() {\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n              redirectVar = <Redirect to=\"/\" />;\n            }*/\n    return (\n      <div>\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeAdmin\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"./scheduleInterview\">\n                  <p style={para}> Schedule Interview </p>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"./assignInterview\">\n                  <p style={para}> Assign Interview </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td width=\"700\">\n              <div className=\"w-55  p-3 mt-2\">\n                <Form>\n                  <Form.Group as={Row} controlId=\"intervieweremail\">\n                    <Form.Label column sm=\"2\">\n                      Interviewer's Email\n                    </Form.Label>\n                    <Col sm=\"10\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"intervieweremail\"\n                        onChange={this.handleChange}\n                        defaultValue={this.state.intervieweremail}\n                      />\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"candidatesemail\">\n                    <Form.Label column sm=\"2\">\n                      Candidate's Email\n                    </Form.Label>\n                    <Col sm=\"10\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"candidatesemail\"\n                        onChange={this.handleChange}\n                        defaultValue={this.state.candidatesemail}\n                      />\n                    </Col>\n                  </Form.Group>\n\n                  <br></br>\n                  <a href=\"./homeAdmin\">\n                    <Button\n                      variant=\"light\"\n                      style={btn}\n                      onClick={this.handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                  </a>\n                </Form>\n              </div>\n            </td>\n            <td width={300}></td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default AssignInterview;\n"]},"metadata":{},"sourceType":"module"}