{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx\";\nimport React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionChange = changeEvent => {\n      let details_completed = this.state.answers.map(answers => {\n        if (answers.skills == changeEvent.target.row) {\n          answers.value = changeEvent.target.value;\n          return;\n        }\n      });\n      let data = {\n        skills: changeEvent.target.row,\n        value: changeEvent.target.value\n      };\n      console.log(changeEvent.target.row);\n      this.setState({\n        answers: this.state.answers.concat(data),\n        selectedOption: changeEvent.target.value\n      });\n    };\n\n    this.submitForm = changeEvent => {\n      let url = \"http://localhost:3001/api/feedback/generateFeedbackReport\";\n      let data = {\n        email: this.state.email,\n        answers: this.answers\n      };\n      /* axios\n        .get(url, data)\n        .then(response => {\n          console.log(\"response is..........\", response.data);\n          \n        })\n        .catch(err => console.log(err));*/\n    };\n\n    this.state = {\n      skills: [],\n      answers: [],\n      email: \"\",\n      selectedOption: \"1\"\n    };\n  }\n\n  componentDidMount() {\n    const result = this.props.location.state.result;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    this.state.email = email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    }; //console.log(\"jobid is \", jobid);\n\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n\n    let response = {\n      skills: [\"Java\", \"MongoDB\", \"Kafka\", \"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n    let radio = [];\n    let i = 1;\n    let options;\n    let questions_answers = response.skills.map(skills => {\n      options = [];\n      i = 1;\n\n      while (i < 6) {\n        let data = {\n          value: i\n        };\n        options.push(data);\n        i = i + 1;\n      }\n\n      let merge = {\n        skills: skills,\n        options: options\n      };\n      radio.push(merge);\n    });\n    console.log(radio);\n    this.setState({\n      radio: radio\n    });\n  }\n\n  render() {\n    let skills = this.state.skills;\n    const cards = this.state.cards;\n    let question_details = skills.map(skills => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"40%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, skills), React.createElement(\"td\", {\n        width: \"60%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, cards.length < 1 ? \"Loading...\" : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, cards.map((card, idx) => React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, card.cardName, card.options.map((lo, idx) => {\n        return React.createElement(\"input\", {\n          key: idx,\n          type: \"radio\",\n          name: card.cardName,\n          value: lo.radioName,\n          checked: !!lo.selected,\n          onChange: this.onInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }))), React.createElement(\"button\", {\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Print Cards\"))));\n    });\n    let redirectVar = null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" \", redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeInterviewer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Home \")))), React.createElement(\"td\", {\n      style: para,\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Please rate the candidate on the basis of following skills:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), \"Rate from 1-5\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), \"1 -> Not applicable\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \"2 -> Does not meet requirement\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), \"3 -> Can Learn with Training\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), \"4 -> Meets Requirements\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), \"5 -> Exceeds Expectations\"))), React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, question_details), React.createElement(Button, {\n      variant: \"light\",\n      style: btn,\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Submit Form\")))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  verticalAllign: \"middle\"\n};\nconst tabletext = {\n  textAlign: 'right',\n  alignSelf: 'stretch'\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default GetQuestions;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx"],"names":["React","Component","Table","NavBar","Form","Button","Route","axios","Redirect","swal","ListGroup","GetQuestions","constructor","props","handleOptionChange","changeEvent","details_completed","state","answers","map","skills","target","row","value","data","console","log","setState","concat","selectedOption","submitForm","url","email","componentDidMount","result","location","currentComponent","pname","desc","jobid","intervieweremail","localStorage","getItem","response","radio","i","options","questions_answers","push","merge","render","cards","question_details","length","card","idx","cardName","lo","radioName","selected","onInputChange","onSubmit","redirectVar","group","para","btn","width","height","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign","para1","tabletext","alignSelf","color","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: [],\n      answers: [],\n      email: \"\",\n      selectedOption : \"1\"\n    };\n  }\n  componentDidMount() {\n    const { result } = this.props.location.state;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    this.state.email = email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    };\n    //console.log(\"jobid is \", jobid);\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n    let response = {\n      skills:[\"Java\",\"MongoDB\",\"Kafka\",\"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n    let radio = []\n    let i=1;\n    let options\n    let questions_answers = response.skills.map(skills => {\n      \n      options = []\n      i = 1;\n      while(i < 6){\n          let data={\n            value: i\n          };\n        options.push(data);\n        i=i+1\n      }\n      let merge = {\n        skills: skills,\n        options: options\n      }\n      radio.push(merge);\n    });\n    console.log(radio);\n    this.setState({\n      radio: radio\n    });\n  }\n\n  handleOptionChange = (changeEvent) => {\n    let details_completed = this.state.answers.map(answers => {\n      if(answers.skills == changeEvent.target.row){\n        answers.value = changeEvent.target.value\n        return\n      }\n    });\n    let data = {\n      skills: changeEvent.target.row,\n      value: changeEvent.target.value\n    }\n    console.log(changeEvent.target.row)\n    this.setState({\n      answers: this.state.answers.concat(data),\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  submitForm = (changeEvent) => {\n    let url = \"http://localhost:3001/api/feedback/generateFeedbackReport\";\n    let data = {\n      email: this.state.email,\n      answers: this.answers\n    }\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        \n      })\n      .catch(err => console.log(err));*/\n  }\n\n  render() {\n    let skills = this.state.skills;\n    const { cards } = this.state;\n    let question_details = skills.map(skills =>{\n      return (\n          <tr>\n            <td width=\"40%\">{skills}</td>\n            <td width=\"60%\"></td>\n              \n              <div>\n        {\n          cards.length < 1 ? \"Loading...\" :\n            <div>\n              {cards.map((card, idx) => (\n                <ul>\n                  {card.cardName}\n                  {\n                    card.options.map((lo, idx) => {\n                      return <input\n                        key={idx}\n                        type=\"radio\"\n                        name={card.cardName}\n                        value={lo.radioName}\n                        checked={!!lo.selected}\n                        onChange={this.onInputChange}\n                      />\n\n                    })\n                  }\n                </ul>\n              ))\n              }\n              < button onClick={this.onSubmit}>Print Cards</button>\n            </div>\n        }\n\n      </div>\n          </tr>\n        );\n      });\n  \n    let redirectVar = null;\n    return (\n      <div>\n        {\" \"}\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeInterviewer\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td style={para} width=\"700\">\n        <Table bordered>\n          <tr>\n            <td width=\"100%\">Please rate the candidate on the basis of following skills:\n            <br/>Rate from 1-5\n            <br/>1 -> Not applicable\n            <br/>2 -> Does not meet requirement\n            <br/>3 -> Can Learn with Training\n            <br/>4 -> Meets Requirements\n            <br/>5 -> Exceeds Expectations</td>\n          </tr>\n        </Table>\n        <Table bordered>\n          {question_details}\n        </Table>\n        <Button\n                  variant=\"light\"\n                  style={btn}\n                  onClick={this.submitForm}\n                >\n                  Submit Form\n                </Button>\n            </td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n\n  verticalAllign: \"middle\"\n};\nconst tabletext = {\n  textAlign: 'right', \n  alignSelf: 'stretch'\n};\nconst btn = {\n  color: \"#bd0d39\",\n\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default GetQuestions;\n"]},"metadata":{},"sourceType":"module"}