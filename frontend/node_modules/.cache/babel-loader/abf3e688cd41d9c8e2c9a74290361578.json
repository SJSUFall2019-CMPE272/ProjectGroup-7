{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx\";\nimport React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionChange = changeEvent => {\n      let details_completed = this.state.candidates.map(candidates => {\n        if (candidates.skills == changeEvent.target.row) candidates.value = changeEvent.target.value;\n      });\n      console.log(changeEvent.target.row);\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    };\n\n    this.submitForm = changeEvent => {\n      let url = \"http://localhost:3001/api/feedback/generateFeedbackReport\";\n      let data = {\n        email: this.state.email,\n        answers: this.answers\n      };\n      /* axios\n        .get(url, data)\n        .then(response => {\n          console.log(\"response is..........\", response.data);\n          \n        })\n        .catch(err => console.log(err));*/\n    };\n\n    this.state = {\n      skills: [],\n      answers: [],\n      email: \"\",\n      selectedOption: \"1\"\n    };\n  }\n\n  componentDidMount() {\n    const result = this.props.location.state.result;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    this.state.email = email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    }; //console.log(\"jobid is \", jobid);\n\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n\n    let response = {\n      skills: [\"Java\", \"MongoDB\", \"Kafka\", \"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n  }\n\n  render() {\n    let skills = this.state.skills;\n    let question_details = skills.map(skills => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"40%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, skills), React.createElement(\"td\", {\n        width: \"60%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"1\",\n        checked: this.state.selectedOption === '1',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"1\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"2\",\n        checked: this.state.selectedOption === '2',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"2\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"3\",\n        checked: this.state.selectedOption === '3',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \"3\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"4\",\n        checked: this.state.selectedOption === '4',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), \"4\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"5\",\n        checked: this.state.selectedOption === '5',\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), \"5\")));\n    });\n    let redirectVar = null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" \", redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeInterviewer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" Home \")))), React.createElement(\"td\", {\n      style: para,\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Please rate the candidate on the basis of following skills:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), \"Rate from 1-5\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), \"1 -> Not applicable\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), \"2 -> Does not meet requirement\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), \"3 -> Can Learn with Training\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), \"4 -> Meets Requirements\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), \"5 -> Exceeds Expectations\"))), React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, question_details), React.createElement(Button, {\n      variant: \"light\",\n      style: btn,\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Submit Form\")))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  verticalAllign: \"middle\"\n};\nconst tabletext = {\n  textAlign: 'right',\n  alignSelf: 'stretch'\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default GetQuestions;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx"],"names":["React","Component","Table","NavBar","Form","Button","Route","axios","Redirect","swal","ListGroup","GetQuestions","constructor","props","handleOptionChange","changeEvent","details_completed","state","candidates","map","skills","target","row","value","console","log","setState","selectedOption","submitForm","url","data","email","answers","componentDidMount","result","location","currentComponent","pname","desc","jobid","intervieweremail","localStorage","getItem","response","concat","render","question_details","redirectVar","group","para","btn","width","height","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign","para1","tabletext","alignSelf","color","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: [],\n      answers: [],\n      email: \"\",\n      selectedOption : \"1\"\n    };\n  }\n  componentDidMount() {\n    const { result } = this.props.location.state;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    this.state.email = email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    };\n    //console.log(\"jobid is \", jobid);\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n    let response = {\n      skills:[\"Java\",\"MongoDB\",\"Kafka\",\"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n  }\n\n  handleOptionChange = (changeEvent) => {\n    let details_completed = this.state.candidates.map(candidates => {\n      if(candidates.skills == changeEvent.target.row)\n        candidates.value = changeEvent.target.value\n    });\n    console.log(changeEvent.target.row)\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  submitForm = (changeEvent) => {\n    let url = \"http://localhost:3001/api/feedback/generateFeedbackReport\";\n    let data = {\n      email: this.state.email,\n      answers: this.answers\n    }\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        \n      })\n      .catch(err => console.log(err));*/\n  }\n\n  render() {\n    let skills = this.state.skills;\n    let question_details = skills.map(skills =>{\n      return (\n          <tr>\n            <td width=\"40%\">{skills}</td>\n            <td width=\"60%\">\n              <label>\n                <input type=\"radio\" \n                value=\"1\" \n                checked={this.state.selectedOption === '1'}\n                onChange={this.handleOptionChange} \n                />\n                1\n              </label>\n              <label>\n                <input type=\"radio\" \n                value=\"2\" \n                checked={this.state.selectedOption === '2'}\n                onChange={this.handleOptionChange} \n                />\n                2\n              </label>\n              <label>\n                <input type=\"radio\" \n                value=\"3\" \n                checked={this.state.selectedOption === '3'}\n                onChange={this.handleOptionChange} />\n                3\n              </label>\n              <label>\n                <input type=\"radio\" \n                value=\"4\" \n                checked={this.state.selectedOption === '4'}\n                onChange={this.handleOptionChange} />\n                4\n              </label>\n              <label>\n                <input type=\"radio\" \n                value=\"5\" \n                checked={this.state.selectedOption === '5'}\n                onChange={this.handleOptionChange} />\n                5\n              </label></td>\n          </tr>\n        );\n      });\n  \n    let redirectVar = null;\n    return (\n      <div>\n        {\" \"}\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeInterviewer\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td style={para} width=\"700\">\n        <Table bordered>\n          <tr>\n            <td width=\"100%\">Please rate the candidate on the basis of following skills:\n            <br/>Rate from 1-5\n            <br/>1 -> Not applicable\n            <br/>2 -> Does not meet requirement\n            <br/>3 -> Can Learn with Training\n            <br/>4 -> Meets Requirements\n            <br/>5 -> Exceeds Expectations</td>\n          </tr>\n        </Table>\n        <Table bordered>\n          {question_details}\n        </Table>\n        <Button\n                  variant=\"light\"\n                  style={btn}\n                  onClick={this.submitForm}\n                >\n                  Submit Form\n                </Button>\n            </td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n\n  verticalAllign: \"middle\"\n};\nconst tabletext = {\n  textAlign: 'right', \n  alignSelf: 'stretch'\n};\nconst btn = {\n  color: \"#bd0d39\",\n\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default GetQuestions;\n"]},"metadata":{},"sourceType":"module"}