{"ast":null,"code":"import _defineProperty from \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = e => {\n      let change = this.state.radio;\n      let checked = false;\n      let nexState = change.map(change => {\n        if (change.skills !== e.target.name) return change;\n        return _objectSpread({}, change, {\n          options: change.options.map(opt => {\n            checked = opt.value === Number(e.target.value);\n\n            if (checked == true) {}\n\n            return _objectSpread({}, opt, {\n              selected: checked\n            });\n          })\n        });\n\n        if (checked == true) {\n          console.log(e.target.name);\n          console.log(e.target.value);\n        }\n      });\n      this.setState({\n        radio: nexState\n      });\n      console.log(this.state.radio);\n    };\n\n    this.handleOptionChange = changeEvent => {\n      let details_completed = this.state.answers.map(answers => {\n        if (answers.skills == changeEvent.target.row) {\n          answers.value = changeEvent.target.value;\n          return;\n        }\n      });\n      let data = {\n        skills: changeEvent.target.row,\n        value: changeEvent.target.value\n      };\n      console.log(changeEvent.target.row);\n      this.setState({\n        answers: this.state.answers.concat(data),\n        selectedOption: changeEvent.target.value\n      });\n    };\n\n    this.submitForm = changeEvent => {\n      let url = \"http://localhost:3001/api/feedback/generateFeedbackReport\";\n      let data = {\n        email: this.state.email,\n        answers: this.answers\n      };\n      /* axios\n        .get(url, data)\n        .then(response => {\n          console.log(\"response is..........\", response.data);\n          \n        })\n        .catch(err => console.log(err));*/\n    };\n\n    this.state = {\n      skills: [],\n      answers: [],\n      email: \"\",\n      selectedOption: \"1\",\n      radio: []\n    };\n  }\n\n  componentDidMount() {\n    const result = this.props.location.state.result;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    this.state.email = email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    }; //console.log(\"jobid is \", jobid);\n\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n\n    let response = {\n      skills: [\"Java\", \"MongoDB\", \"Kafka\", \"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n    let radio = [];\n    let i = 1;\n    let options;\n    let questions_answers = response.skills.map(skills => {\n      options = [];\n      i = 1;\n\n      while (i < 6) {\n        let data = {\n          value: i\n        };\n        options.push(data);\n        i = i + 1;\n      }\n\n      let merge = {\n        skills: skills,\n        options: options\n      };\n      radio.push(merge);\n    });\n    console.log(radio);\n    this.setState({\n      radio: radio\n    });\n  }\n\n  render() {\n    let skills = this.state.skills; // let question_details = skills.map(skills =>{\n    //   return (\n    //       <tr>\n    //         <td width=\"40%\">{skills}</td>\n    //         <td width=\"60%\"></td>\n    //       </tr>\n    //     );\n    //   });\n\n    let redirectVar = null;\n    let radio = this.state.radio;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" \", redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeInterviewer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \" Home \")))), React.createElement(\"td\", {\n      style: para,\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Please rate the candidate on the basis of following skills:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), \"Rate from 1-5\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \"1 -> Not applicable\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), \"2 -> Does not meet requirement\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), \"3 -> Can Learn with Training\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), \"4 -> Meets Requirements\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), \"5 -> Exceeds Expectations\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, radio.length < 1 ? \"Loading...\" : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, radio.map((card, idx) => React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, card.skills, card.options.map((lo, idx) => {\n      return React.createElement(\"input\", {\n        key: idx,\n        type: \"radio\",\n        name: card.skills,\n        value: lo.value,\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      });\n    }))))), React.createElement(Button, {\n      variant: \"light\",\n      style: btn,\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Submit Form\")))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  verticalAllign: \"middle\"\n};\nconst tabletext = {\n  textAlign: 'right',\n  alignSelf: 'stretch'\n};\nconst btn = {\n  color: \"#bd0d39\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default GetQuestions;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx"],"names":["React","Component","Table","NavBar","Form","Button","Route","axios","Redirect","swal","ListGroup","GetQuestions","constructor","props","onInputChange","e","change","state","radio","checked","nexState","map","skills","target","name","options","opt","value","Number","selected","console","log","setState","handleOptionChange","changeEvent","details_completed","answers","row","data","concat","selectedOption","submitForm","url","email","componentDidMount","result","location","currentComponent","pname","desc","jobid","intervieweremail","localStorage","getItem","response","i","questions_answers","push","merge","render","redirectVar","group","para","length","card","idx","lo","btn","width","height","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign","para1","tabletext","alignSelf","color","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: [],\n      answers: [],\n      email: \"\",\n      selectedOption : \"1\",\n      radio:[]\n    };\n  }\n  componentDidMount() {\n    const { result } = this.props.location.state;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    this.state.email = email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    };\n    //console.log(\"jobid is \", jobid);\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n    let response = {\n      skills:[\"Java\",\"MongoDB\",\"Kafka\",\"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n    let radio = []\n    let i=1;\n    let options\n    let questions_answers = response.skills.map(skills => {\n      \n      options = []\n      i = 1;\n      while(i < 6){\n          let data={\n            value: i\n          };\n        options.push(data);\n        i=i+1\n      }\n      let merge = {\n        skills: skills,\n        options: options\n      }\n      radio.push(merge);\n    });\n    console.log(radio);\n    this.setState({\n      radio: radio\n    });\n  }\n\n  onInputChange = (e) => {\n    let change = this.state.radio;\n    let checked = false;\n    let nexState = change.map(change => {\n      if (change.skills !== e.target.name) return change;\n      return {\n        ...change,\n        options: change.options.map(opt => {\n          checked = opt.value === Number(e.target.value);\n          if(checked == true){\n          }\n          return {\n            ...opt,\n            selected: checked\n          }\n\n        })\n      }\n      if(checked == true){\n        console.log(e.target.name)\n        console.log(e.target.value)\n      }\n    });\n    this.setState({ radio: nexState })\n    console.log(this.state.radio);\n  }\n\n  handleOptionChange = (changeEvent) => {\n    let details_completed = this.state.answers.map(answers => {\n      if(answers.skills == changeEvent.target.row){\n        answers.value = changeEvent.target.value\n        return\n      }\n    });\n    let data = {\n      skills: changeEvent.target.row,\n      value: changeEvent.target.value\n    }\n    console.log(changeEvent.target.row)\n    this.setState({\n      answers: this.state.answers.concat(data),\n      selectedOption: changeEvent.target.value\n    });\n  }\n\n  submitForm = (changeEvent) => {\n    let url = \"http://localhost:3001/api/feedback/generateFeedbackReport\";\n    let data = {\n      email: this.state.email,\n      answers: this.answers\n    }\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        \n      })\n      .catch(err => console.log(err));*/\n  }\n\n  render() {\n    let skills = this.state.skills;\n    // let question_details = skills.map(skills =>{\n    //   return (\n    //       <tr>\n    //         <td width=\"40%\">{skills}</td>\n    //         <td width=\"60%\"></td>\n              \n\n    //       </tr>\n    //     );\n    //   });\n  \n    let redirectVar = null;\n    let radio = this.state.radio;\n    return (\n      <div>\n        {\" \"}\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeInterviewer\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td style={para} width=\"700\">\n        <Table bordered>\n          <tr>\n            <td width=\"100%\">Please rate the candidate on the basis of following skills:\n            <br/>Rate from 1-5\n            <br/>1 -> Not applicable\n            <br/>2 -> Does not meet requirement\n            <br/>3 -> Can Learn with Training\n            <br/>4 -> Meets Requirements\n            <br/>5 -> Exceeds Expectations</td>\n          </tr>\n        </Table>\n        <div>\n        {\n          radio.length < 1 ? \"Loading...\" :\n            <div>\n              {radio.map((card, idx) => (\n                <ul>\n                  {card.skills}\n                  {\n                    card.options.map((lo, idx) => {\n                        return <input\n                        key={idx}\n                        type=\"radio\"\n                        name={card.skills}\n                        value={lo.value}\n                        onChange={this.onInputChange}/>\n                    })\n                  }\n                </ul>\n              ))\n              }\n              \n            </div>\n          }\n          </div>\n        <Button\n                  variant=\"light\"\n                  style={btn}\n                  onClick={this.submitForm}\n                >\n                  Submit Form\n                </Button>\n            </td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n\n  verticalAllign: \"middle\"\n};\nconst tabletext = {\n  textAlign: 'right', \n  alignSelf: 'stretch'\n};\nconst btn = {\n  color: \"#bd0d39\",\n\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  fontStyle: \"normal\"\n};\nexport default GetQuestions;\n"]},"metadata":{},"sourceType":"module"}