{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx\";\nimport React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: []\n    };\n  }\n\n  componentDidMount() {\n    const result = this.props.location.state.result;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    }; //console.log(\"jobid is \", jobid);\n\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n\n    let response = {\n      skills: [\"Java\", \"MongoDB\", \"Kafka\", \"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n  }\n\n  render() {\n    let skills = this.state.skills;\n    return React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Please rate the candidate on the basis of following skills:\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Rate from 1-5\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"1 -> Not applicable\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"2 -> Does not meet requirement\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"3 -> Can Learn with Training\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"4 -> Meets Requirements\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"5 -> Exceeds Expectations\"))); // let details_pending = this.state.pending.map(pending => {\n    //   return (\n    //     <Table bordered>\n    //       <tr>\n    //         <td width=\"50%\">{pending.name}</td>\n    //         <td width=\"50%\">{pending.email}</td>\n    //       </tr>\n    //     </Table>\n    //   );\n    // });\n\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n          redirectVar = <Redirect to=\"/\" />;\n        }*/\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", redirectVar, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Table, {\n      borderless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      style: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./homeAdmin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \" Home \")), React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./scheduleInterview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Schedule Interview \")), React.createElement(ListGroup.Item, {\n      action: true,\n      href: \"./assignInterview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" Assign Interview \")))), React.createElement(\"td\", {\n      style: para,\n      width: \"700\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Process Completed\"), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"37%\",\n      style: para1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"td\", {\n      width: \"37%\",\n      style: para1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"td\", {\n      width: \"35%\",\n      style: para1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Feedback Report\")), details_completed, React.createElement(\"p\", {\n      style: para,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Process Pending\"), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"500\",\n      style: para1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"td\", {\n      width: \"500\",\n      style: para1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Email\")), details_pending))));\n  }\n\n}\n\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  verticalAllign: \"middle\"\n};\nexport default GetQuestions;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/GetQuestions.jsx"],"names":["React","Component","Table","NavBar","Form","Button","Route","axios","Redirect","swal","ListGroup","GetQuestions","constructor","props","state","skills","componentDidMount","result","location","console","log","currentComponent","setState","pname","desc","jobid","email","data","intervieweremail","localStorage","getItem","url","response","concat","render","redirectVar","group","para","para1","details_completed","details_pending","width","height","fontfamily","fontSize","textAlign","padding","margin","display","verticalAllign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NavBar from \"./leftbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass GetQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: []\n    };\n  }\n  componentDidMount() {\n    const { result } = this.props.location.state;\n    console.log(\"passed value is \", result);\n    let currentComponent = this;\n    currentComponent.setState({\n      pname: result.pname,\n      desc: result.desc,\n      skills: result.skills,\n      jobid: result.jobid\n    });\n    let email = result.email;\n    let data = {\n      email: email,\n      intervieweremail: localStorage.getItem(\"email\")\n    };\n    //console.log(\"jobid is \", jobid);\n    let url = \"http://localhost:3001/api/feedback/getQuestions\";\n    /* axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        this.setState({\n          skills: this.state.candidates.concat(response.data.skills)\n        });\n      })\n      .catch(err => console.log(err));*/\n    let response = {\n      skills:[\"Java\",\"MongoDB\",\"Kafka\",\"React\"]\n    };\n    this.setState({\n      skills: this.state.skills.concat(response.skills)\n    });\n  }\n\n  render() {\n    let skills = this.state.skills;\n    \n      return (\n         <Table bordered>\n          <tr>\n            <td width=\"100%\">Please rate the candidate on the basis of following skills:</td>\n          </tr>\n          <tr>\n            <td width=\"100%\">Rate from 1-5</td>\n          </tr>\n          <tr>\n            <td width=\"100%\">1 -> Not applicable</td>\n          </tr>\n          <tr>\n            <td width=\"100%\">2 -> Does not meet requirement</td>\n          </tr>\n          <tr>\n            <td width=\"100%\">3 -> Can Learn with Training</td>\n          </tr>\n          <tr>\n            <td width=\"100%\">4 -> Meets Requirements</td>\n          </tr>\n          <tr>\n            <td width=\"100%\">5 -> Exceeds Expectations</td>\n          </tr>\n         </Table>\n      );\n    \n    // let details_pending = this.state.pending.map(pending => {\n    //   return (\n    //     <Table bordered>\n    //       <tr>\n    //         <td width=\"50%\">{pending.name}</td>\n    //         <td width=\"50%\">{pending.email}</td>\n    //       </tr>\n    //     </Table>\n    //   );\n    // });\n    let redirectVar = null;\n    /* if (localStorage.getItem(\"name\") == null) {\n          redirectVar = <Redirect to=\"/\" />;\n        }*/\n    return (\n      <div>\n        {\" \"}\n        {redirectVar}\n        <NavBar />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Table borderless>\n          <tr>\n            <td>\n              <ListGroup variant=\"flush\" style={group}>\n                <ListGroup.Item action href=\"./homeAdmin\">\n                  <p style={para}> Home </p>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"./scheduleInterview\">\n                  <p style={para}> Schedule Interview </p>\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"./assignInterview\">\n                  <p style={para}> Assign Interview </p>\n                </ListGroup.Item>\n              </ListGroup>\n            </td>\n            <td style={para} width=\"700\">\n              <p style={para}>Process Completed</p>\n              <tr>\n                <td width=\"37%\" style={para1}>\n                  Name\n                </td>\n                <td width=\"37%\" style={para1}>\n                  Email\n                </td>\n                <td width=\"35%\" style={para1}>\n                  Feedback Report\n                </td>\n              </tr>\n              {details_completed}\n              <p style={para}>Process Pending</p>\n              <tr>\n                <td width=\"500\" style={para1}>\n                  Name\n                </td>\n                <td width=\"500\" style={para1}>\n                  Email\n                </td>\n              </tr>\n              {details_pending}\n            </td>\n          </tr>\n        </Table>\n      </div>\n    );\n  }\n}\nconst group = {\n  width: 320,\n  height: 700\n};\nconst para = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 30,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n  display: \"inline-block\",\n  verticalAllign: \"middle\"\n};\nconst para1 = {\n  fontfamily: \"Arial, Helvetica, sans-serif\",\n  fontSize: 20,\n  textAlign: \"center\",\n  padding: 10,\n  margin: 10,\n\n  verticalAllign: \"middle\"\n};\nexport default GetQuestions;\n"]},"metadata":{},"sourceType":"module"}