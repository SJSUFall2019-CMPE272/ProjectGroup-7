{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport FontAwesome from 'react-fontawesome';\nimport Dropdown from './DropDown.jsx';\nimport { MDBContainer, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from \"mdbreact\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetThenSet = (id, key) => {\n      let temp = JSON.parse(JSON.stringify(this.state[key]));\n      temp.forEach(item => item.selected = false);\n      temp[id].selected = true;\n      this.setState({\n        [key]: temp,\n        title: temp[id].title\n      });\n    };\n\n    this.handleChange = name => {\n      this.setState({\n        company: name\n      });\n    };\n\n    this.state = {\n      listOpen: false,\n      title: \"\",\n      headerTitle: this.props.title,\n      company: \"\",\n      collapse: false,\n      isSignedIn: false,\n      role: [{\n        id: 0,\n        title: 'Admin',\n        selected: false,\n        key: 'role'\n      }, {\n        id: 1,\n        title: 'Interviewer',\n        selected: false,\n        key: 'role'\n      }, {\n        id: 2,\n        title: 'Candidate',\n        selected: false,\n        key: 'role'\n      }]\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true\n    });\n  }\n\n  handleClickOutside() {\n    this.setState({\n      listOpen: false\n    });\n  }\n\n  login(response) {\n    //console.log(\"Google Response: \"+JSON.stringify(response));\n    console.log(sessionStorage.getItem('company')); //call Login API with{\n    //\"name\":\"response.name\",\n    //\"email\":\"response.email\"\n    //\"company\":\"\",\n    //\"usertype\":\"\"}\n  }\n\n  render() {\n    const list = this.props.list;\n    const _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n\n    const responseGoogle = response => {\n      if (!response.error) this.login(response);\n    };\n\n    const bgPink = {\n      backgroundColor: \"#e91e63\"\n    };\n    const container = {\n      height: 1300\n    };\n    let drop = '';\n    if (this.state.title == \"Admin\") drop = true;else drop = false;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MDBNavbar, {\n      style: bgPink,\n      dark: true,\n      expand: \"md\",\n      scrolling: true,\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(MDBNavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Feed-Me-Back\")), React.createElement(MDBNavbarToggler, {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(MDBCollapse, {\n      isOpen: this.state.collapse,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(MDBNavbarNav, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(MDBNavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Features\")), React.createElement(MDBNavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"./integration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Integration\")), React.createElement(MDBNavItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Login\"))))))), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"./login1.jpg\"),\n      width: 1000,\n      class: \"rounded\",\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Login with Google\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      title: \"Login as\",\n      list: this.state.role,\n      resetThenSet: this.resetThenSet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), drop ? React.createElement(Results, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(GoogleLogin, {\n      clientId: \"873380339585-lp7se9eau76buen9oa0787e285tpr42k.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\n      ,\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/Login.jsx"],"names":["React","Component","FontAwesome","Dropdown","MDBContainer","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBIcon","Login","constructor","props","resetThenSet","id","key","temp","JSON","parse","stringify","state","forEach","item","selected","setState","title","handleChange","name","company","listOpen","headerTitle","collapse","isSignedIn","role","onClick","bind","onSuccess","handleClickOutside","login","response","console","log","sessionStorage","getItem","render","list","responseGoogle","error","bgPink","backgroundColor","container","height","drop","require"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FontAwesome from 'react-fontawesome'\nimport Dropdown from './DropDown.jsx'\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n  MDBNavLink,\n  MDBIcon\n} from \"mdbreact\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    listOpen: false,\n    title : \"\",\n    headerTitle: this.props.title,\n    company: \"\",\n      collapse: false,\n      isSignedIn: false,\n      role: [\n          {\n              id: 0,\n              title: 'Admin',\n              selected: false,\n              key: 'role'\n          },\n          {\n            id: 1,\n            title: 'Interviewer',\n            selected: false,\n            key: 'role'\n          },\n          {\n            id: 2,\n            title: 'Candidate',\n            selected: false,\n            key: 'role'\n          }\n        ],\n    };\n    this.onClick = this.onClick.bind(this);\n\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true\n    })\n  }\n\n  handleClickOutside(){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  login(response) {\n    //console.log(\"Google Response: \"+JSON.stringify(response));\n    console.log(sessionStorage.getItem('company'));\n    //call Login API with{\n        //\"name\":\"response.name\",\n        //\"email\":\"response.email\"\n        //\"company\":\"\",\n        //\"usertype\":\"\"}\n  }\n\n  resetThenSet = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp.forEach(item => item.selected = false);\n    temp[id].selected = true;\n    this.setState({\n      [key]: temp,\n      title: temp[id].title\n    });\n  }\n\n  handleChange = (name) => {\n    this.setState({\n      company: name\n    });\n  }\n\n  render() {\n    const{list} = this.props\n    const{listOpen, headerTitle} = this.state\n    const responseGoogle = (response) => {\n      if(!response.error)\n      this.login(response)\n    }\n    const bgPink = { backgroundColor: \"#e91e63\" };\n    const container = { height: 1300 };\n      \n    let drop = '';\n    if(this.state.title == \"Admin\")\n      drop = true;\n    else\n      drop = false;\n    return (\n      <div>\n        <Router>\n          <header>\n            <MDBNavbar style={bgPink} dark expand=\"md\" scrolling fixed=\"top\">\n              <MDBNavbarBrand href=\"/\">\n                <strong>Feed-Me-Back</strong>\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.onClick} />\n              <MDBCollapse isOpen={this.state.collapse} navbar>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/\">Features</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"./integration\">Integration</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem active>\n                    <MDBNavLink to=\"/login\">Login</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBNavbar>\n          </header>\n        </Router>\n\n        <table>\n          <tr>\n            <td>\n              <img\n                src={require(\"./login1.jpg\")}\n                width={1000}\n                class=\"rounded\"\n                alt=\"avatar\"\n              />\n            </td>\n            <td>\n              <h3>Login with Google</h3>\n              <form>\n                <Dropdown\n                  title=\"Login as\"\n                  list={this.state.role}\n                  resetThenSet={this.resetThenSet}\n                />\n\n                {drop ? <Results /> : null}\n\n                <div className=\"App\">\n                  <GoogleLogin\n                    clientId=\"873380339585-lp7se9eau76buen9oa0787e285tpr42k.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\n                    buttonText=\"LOGIN WITH GOOGLE\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                  />\n                </div>\n              </form>\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n  \n  \n}\n  \n\n  \n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}