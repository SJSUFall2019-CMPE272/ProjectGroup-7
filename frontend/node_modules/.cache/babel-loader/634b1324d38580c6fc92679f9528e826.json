{"ast":null,"code":"var _jsxFileName = \"/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport FontAwesome from 'react-fontawesome';\nimport Dropdown from './DropDown.jsx';\nimport { MDBContainer, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from \"mdbreact\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport GoogleLogin from 'react-google-login';\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetThenSet = (id, key) => {\n      let temp = JSON.parse(JSON.stringify(this.state[key]));\n      temp.forEach(item => item.selected = false);\n      temp[id].selected = true;\n      this.setState({\n        [key]: temp,\n        title: temp[id].title\n      });\n    };\n\n    this.handleChange = name => {\n      this.setState({\n        company: name\n      });\n    };\n\n    p = props;\n    this.state = {\n      listOpen: false,\n      title: \"\",\n      headerTitle: this.props.title,\n      company: \"\",\n      collapse: false,\n      isSignedIn: false,\n      role: [{\n        id: 0,\n        title: 'Admin',\n        selected: false,\n        key: 'role'\n      }, {\n        id: 1,\n        title: 'Interviewer',\n        selected: false,\n        key: 'role'\n      }, {\n        id: 2,\n        title: 'Candidate',\n        selected: false,\n        key: 'role'\n      }]\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true\n    });\n  }\n\n  handleClickOutside() {\n    this.setState({\n      listOpen: false\n    });\n  }\n\n  login(response) {\n    //console.log(\"Google Response: \"+JSON.stringify(response));\n    console.log(localStorage.getItem('company'));\n    console.log(response);\n    let data = {\n      name: response.name,\n      email: response.email,\n      usertype: this.state.title,\n      company: localStorage.getItem('company')\n    };\n    let url = \"http://localhost:3001/api/feedback/login\";\n    /*axios\n     .get(url, data)\n     .then(response => {\n       console.log(\"response is..........\", response.data);\n       localStorage.setItem(\"name\":data.name);\n       localStorage.setItem(\"email\":data.email);\n       localStorage.setItem(\"company\":data.company);\n       if()\n     })\n     .catch(err => console.log(err));*/\n  }\n\n  render() {\n    const list = this.props.list;\n    const _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n\n    const responseGoogle = response => {\n      if (!response.error) this.login(response);\n    };\n\n    const bgPink = {\n      backgroundColor: \"#e91e63\"\n    };\n    const container = {\n      height: 1300\n    };\n    let drop = '';\n    if (this.state.title == \"Admin\") drop = true;else drop = false;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(MDBNavbar, {\n      style: bgPink,\n      dark: true,\n      expand: \"md\",\n      scrolling: true,\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(MDBNavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Feed-Me-Back\")), React.createElement(MDBNavbarToggler, {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(MDBCollapse, {\n      isOpen: this.state.collapse,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(MDBNavbarNav, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(MDBNavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Features\")), React.createElement(MDBNavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"./integration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Integration\")), React.createElement(MDBNavItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MDBNavLink, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Login\"))))))), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"./login1.jpg\"),\n      width: 1000,\n      class: \"rounded\",\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Login with Google\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      title: \"Login as\",\n      list: this.state.role,\n      resetThenSet: this.resetThenSet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), drop ? React.createElement(Results, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(GoogleLogin, {\n      clientId: \"873380339585-lp7se9eau76buen9oa0787e285tpr42k.apps.googleusercontent.com\",\n      buttonText: \"LOGIN WITH GOOGLE\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = name => {\n      this.setState({\n        company: name.target.value\n      });\n      localStorage.setItem('company', name.target.value);\n    };\n\n    this.state = {\n      company: \"\"\n    };\n  }\n\n  render() {\n    const list = this.props;\n    return React.createElement(\"div\", {\n      className: \"company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.company,\n      placeholder: \"Company\",\n      type: \"text\",\n      name: \"company\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\n;\nexport default Login;","map":{"version":3,"sources":["/Users/shraddhanayak/Desktop/cmpe272/feedmeBack/frontend/src/components/Login.jsx"],"names":["React","Component","FontAwesome","Dropdown","MDBContainer","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBIcon","BrowserRouter","Router","Form","Button","GoogleLogin","Login","constructor","props","resetThenSet","id","key","temp","JSON","parse","stringify","state","forEach","item","selected","setState","title","handleChange","name","company","p","listOpen","headerTitle","collapse","isSignedIn","role","onClick","bind","onSuccess","handleClickOutside","login","response","console","log","localStorage","getItem","data","email","usertype","url","render","list","responseGoogle","error","bgPink","backgroundColor","container","height","drop","require","Results","target","value","setItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FontAwesome from 'react-fontawesome'\nimport Dropdown from './DropDown.jsx'\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n  MDBNavLink,\n  MDBIcon\n} from \"mdbreact\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport GoogleLogin from 'react-google-login';\nimport \"mdbreact/dist/css/mdb.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    p = props;\n    this.state = {\n    listOpen: false,\n    title : \"\",\n    headerTitle: this.props.title,\n    company: \"\",\n      collapse: false,\n      isSignedIn: false,\n      role: [\n          {\n              id: 0,\n              title: 'Admin',\n              selected: false,\n              key: 'role'\n          },\n          {\n            id: 1,\n            title: 'Interviewer',\n            selected: false,\n            key: 'role'\n          },\n          {\n            id: 2,\n            title: 'Candidate',\n            selected: false,\n            key: 'role'\n          }\n        ],\n    };\n    this.onClick = this.onClick.bind(this);\n\n  }\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n\n  onSuccess() {\n    this.setState({\n      isSignedIn: true\n    })\n  }\n\n  handleClickOutside(){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  login(response) {\n    //console.log(\"Google Response: \"+JSON.stringify(response));\n    console.log(localStorage.getItem('company'));\n    console.log(response);\n    let data = {\n      name: response.name,\n      email: response.email,\n      usertype: this.state.title,\n      company: localStorage.getItem('company')\n    }\n    let url = \"http://localhost:3001/api/feedback/login\";\n     /*axios\n      .get(url, data)\n      .then(response => {\n        console.log(\"response is..........\", response.data);\n        localStorage.setItem(\"name\":data.name);\n        localStorage.setItem(\"email\":data.email);\n        localStorage.setItem(\"company\":data.company);\n        if()\n      })\n      .catch(err => console.log(err));*/\n  }\n\n  resetThenSet = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp.forEach(item => item.selected = false);\n    temp[id].selected = true;\n    this.setState({\n      [key]: temp,\n      title: temp[id].title\n    });\n  }\n\n  handleChange = (name) => {\n    this.setState({\n      company: name\n    });\n  }\n\n  render() {\n    const{list} = this.props\n    const{listOpen, headerTitle} = this.state\n    const responseGoogle = (response) => {\n      if(!response.error)\n      this.login(response)\n    }\n    const bgPink = { backgroundColor: \"#e91e63\" };\n    const container = { height: 1300 };\n      \n    let drop = '';\n    if(this.state.title == \"Admin\")\n      drop = true;\n    else\n      drop = false;\n    return (\n      <div>\n        <Router>\n          <header>\n            <MDBNavbar style={bgPink} dark expand=\"md\" scrolling fixed=\"top\">\n              <MDBNavbarBrand href=\"/\">\n                <strong>Feed-Me-Back</strong>\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.onClick} />\n              <MDBCollapse isOpen={this.state.collapse} navbar>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/\">Features</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"./integration\">Integration</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem active>\n                    <MDBNavLink to=\"/login\">Login</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBNavbar>\n          </header>\n        </Router>\n\n        <table>\n          <tr>\n            <td>\n              <img\n                src={require(\"./login1.jpg\")}\n                width={1000}\n                class=\"rounded\"\n                alt=\"avatar\"\n              />\n            </td>\n            <td>\n              <h3>Login with Google</h3>\n              <form>\n                <Dropdown\n                  title=\"Login as\"\n                  list={this.state.role}\n                  resetThenSet={this.resetThenSet}\n                />\n\n                {drop ? <Results /> : null}\n\n                <div className=\"App\">\n                  <GoogleLogin\n                    clientId=\"873380339585-lp7se9eau76buen9oa0787e285tpr42k.apps.googleusercontent.com\"\n                    buttonText=\"LOGIN WITH GOOGLE\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                  />\n                </div>\n              </form>\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n  \n  \n}\nclass Results extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      company : \"\"\n    }\n  }\n\n    render() {\n        const list = this.props\n        return (\n            <div className=\"company\"><input type=\"text\" value={this.state.company} placeholder=\"Company\" type=\"text\" name=\"company\" onChange={this.handleChange} noValidate/> </div>\n        );\n    }\n\n    handleChange = (name) => {\n      this.setState({\n        company: name.target.value\n      });\n      localStorage.setItem('company',name.target.value);\n    }\n};\n\n  \n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}